/**     THREAD PRIORITY
 *      -> In java for every thread we have a thread priority, either explictly provided by a programmer or
 *          automatically generated by JVM.
 *      -> The valid range of Thread Prioirty is from 1 to 10. Where 1 is least and 10 is highest priority.
 *      -> If we are trying to insert some other priority then we will get runtime exception called 
 *                                                                                          -> IllegalArgumentException
 *      -> Thread class gives the following standard constants as a thread priority:
 *                      Eg : MAX_PRIORITY is 10
 *                           MIN_PRIORITY is 1
 *                           NORM_PRIORITY is 5
 *      -> We don't have such constants like HIGH_PRIORITY & LOW_PRIORITY.
 *      -> Thread Scheduler allocates CPU with the help of Thread Priority.
 *      -> A thread having highest priority will be executed first.
 *      -> If all the threads are having the same priority then which thread will be executed first depends upon the Thread Scheduler 
 *          so here we can't expect any execution order or exact output in MultiThreading.
 *      
 *      DEFAULT PRIORITY:
 *      -> The default priority for the main thread is 5 and for other threads, priority will be inherited from parent to child.
 *      -> We can use the following methods to set and get a thread priority:
 *                          public void setPriority(int priority);
 *                          public int getPriority();
 *  
 */

class MyThread extends Thread{
    public void run(){
            System.out.println("Child Thread");
    }
}

class ThreadPriority{
    public static void main(String[] args) {
        MyThread t = new MyThread();
        System.out.println(Thread.currentThread().getPriority());
        System.out.println(t.getPriority());
        Thread.currentThread().setPriority(10);
        System.out.println(Thread.currentThread().getPriority());
        System.out.println(t.getPriority());
        t.setPriority(7);
        System.out.println(t.getPriority());
    }
}